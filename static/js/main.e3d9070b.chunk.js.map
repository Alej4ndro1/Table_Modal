{"version":3,"sources":["app/store.ts","data.js","icons/modal/UA.svg","components/Modal/EditModal.tsx","icons/navigation/mode_24px.svg","icons/navigation/more_vert_24px.svg","icons/navigation/save_alt_24px.svg","icons/navigation/delete_24px.svg","components/Dropdown/Dropdown.tsx","components/Table/Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["store","configureStore","reducer","users","action","title","userName","phone","email","url","data","EditModal","user","Option","Select","prefixSelector","Item","name","noStyle","style","width","defaultValue","value","src","UAIcon","alt","className","placeholder","addonBefore","size","options","label","disabled","PlusIcon","height","viewBox","fill","xmlns","d","CloseIcon","DropdownMenu","record","useState","open","setOpen","isModalOpen","setIsModalOpen","handleMenuClick","handleCancel","overlay","onOk","footer","onClick","type","editSvg","saveSvg","deleteSvg","onOpenChange","flag","optionSvg","columns","dataIndex","key","render","_text","sorter","a","b","localeCompare","TableComponent","dataSource","App","xs","md","span","offset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e3d9070b.chunk.js","sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nexport const store = configureStore({\n  reducer: {\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\nReturnType,\nRootState,\nunknown,\nAction<string>\n>;\n","export const users = [\n  {\n    action: '...',\n    title: 'Lorem ipsum',\n    userName: 'John Doe',\n    phone: '+380 95 862-23-46',\n    email: 'milema5478@paxven.com',\n    url: 'https://yesoriginal.inboost.ai/api/webhok/retwsdhgds32/',\n    data: '01.01.2022',\n  },\n  {\n    action: '...',\n    title: 'Nam dictum',\n    userName: 'Aine Thomson',\n    phone: '+380 95 368-87-62',\n    email: 'kosajoj658@lubde.com',\n    url: 'https://yesoriginal.inboost.ai/api/webhok/retwsdhgds32/',\n    data: '01.01.2023',\n  },\n  {\n    action: '...',\n    title: 'Donec luctus',\n    userName: 'Benedict Mcneil',\n    phone: '+380 95 492-39-10',\n    email: 'godam14837@nazyno.com',\n    url: 'https://yesoriginal.inboost.ai/api/webhok/retwsdhgds32/',\n    data: '01.01.2025',\n  },\n  {\n    action: '...',\n    title: 'Nullam volutpat',\n    userName: 'Melisa Foley',\n    phone: '+380 95 275-53-83',\n    email: 'pahibe4048@randrai.com',\n    url: 'https://yesoriginal.inboost.ai/api/webhok/retwsdhgds32/',\n    data: '01.01.2021',\n  },\n];\n","export default __webpack_public_path__ + \"static/media/UA.0f64a477.svg\";","import React from 'react';\nimport {\n  Input,\n  Form,\n  Select,\n} from 'antd';\nimport './Modal.scss';\nimport UAIcon from '../../icons/modal/UA.svg';\nimport { User } from '../../types/User';\n\ntype UserType = {\n  user: User; // ? Мій об'єкт user\n};\n\nexport const EditModal: React.FC<UserType> = ({ user }) => {\n  const { Option } = Select;\n\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select style={{ width: 60 }} defaultValue=\"default\">\n        <Option value=\"default\"><img src={UAIcon} alt=\"\" /></Option>\n        <Option value=\"87\">+87</Option>\n      </Select>\n    </Form.Item>\n  );\n\n  return (\n    <>\n      <div className=\"form\">\n        <div className=\"inputBlock\">\n          <h3 className=\"inputTitle\">Назва</h3>\n          <Input placeholder=\"Статус посилки\" className=\"modalInput\" value={user.title} />\n          <h3 className=\"inputTitle\">Номер телефону</h3>\n          {/* <Form.Item\n              name=\"phone\"\n              rules={[{ required: true, message: 'Please input your phone number!' }]}\n              className=\"phoneModalInput\"\n            >\n            </Form.Item> */\n            // ! це має бути у модалці addUser\n          }\n          <Input\n            addonBefore={prefixSelector}\n            style={{ width: '100%' }}\n            placeholder=\"+380 95 xxx-xx-xx\"\n            value={user.phone}\n            className=\"phoneModalInput\"\n            size=\"large\"\n          />\n          <h3 className=\"inputTitle\">Група користувачів</h3>\n          <Select\n            defaultValue=\"default\"\n            className=\"modalInput\"\n            size=\"large\"\n            options={[\n              {\n                value: 'default',\n                label: 'Оберіть групу',\n                disabled: true,\n              },\n              {\n                value: 'group1',\n                label: '1 Група',\n              },\n              {\n                value: 'group2',\n                label: '2 Група',\n              },\n              {\n                value: 'group3',\n                label: '3 Група',\n              },\n            ]}\n          />\n\n          <h3 className=\"inputTitle\">Додати нове поле</h3>\n          <Select\n            defaultValue=\"default\"\n            className=\"modalInput\"\n            size=\"large\"\n            options={[\n              {\n                value: 'default',\n                label: 'Заголовок',\n                disabled: true,\n              },\n              {\n                value: 'group1',\n                label: 'Текст',\n              },\n              {\n                value: 'group2',\n                label: 'Текст',\n              },\n              {\n                value: 'group3',\n                label: 'Текст',\n              },\n            ]}\n          />\n        </div>\n\n        <div className=\"inputBlock\">\n          <h3 className=\"inputTitle\">Ім&#39;я та Прізвище</h3>\n          <Input placeholder=\"Через пробіл\" className=\"modalInput\" value={user.userName} />\n          <h3 className=\"inputTitle\">Email</h3>\n          {/* <Form.Item\n              name=\"email\"\n              rules={[\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ]}\n            >\n            </Form.Item> */\n            // ! це має бути у модалці addUser\n          }\n          <Input placeholder=\"example.com\" className=\"modalInput\" value={user.email} />\n          <h3 className=\"inputTitle\">Мова</h3>\n          <Select\n            defaultValue=\"default\"\n            className=\"modalInput\"\n            size=\"large\"\n            options={[\n              {\n                value: 'default',\n                label: 'Оберіть мову',\n                disabled: true,\n              },\n              {\n                value: 'language1',\n                label: 'Українська',\n              },\n              {\n                value: 'language2',\n                label: 'English',\n              },\n              {\n                value: 'language3',\n                label: 'Polski',\n              },\n            ]}\n          />\n          <h3 className=\"inputTitle\">Значення поля</h3>\n          <Input placeholder=\"Статус посилки\" />\n        </div>\n      </div>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/mode_24px.be4b8058.svg\";","export default __webpack_public_path__ + \"static/media/more_vert_24px.4743bfa1.svg\";","export default __webpack_public_path__ + \"static/media/save_alt_24px.38b8e4db.svg\";","export default __webpack_public_path__ + \"static/media/delete_24px.8dc9351d.svg\";","import React, { useState } from 'react';\nimport { Button, Dropdown, Modal } from 'antd';\nimport { User } from '../../types/User';\nimport { EditModal } from '../Modal/EditModal';\n\nimport editSvg from '../../icons/navigation/mode_24px.svg';\nimport optionSvg from '../../icons/navigation/more_vert_24px.svg';\nimport saveSvg from '../../icons/navigation/save_alt_24px.svg';\nimport deleteSvg from '../../icons/navigation/delete_24px.svg';\n\ntype RecordType = {\n  record: User\n};\n\nconst PlusIcon = () => (\n  <svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M14 8.12247H8V14.1519H6V8.12247H0V6.11266H6V0.083252H8V6.11266H14V8.12247Z\" fill=\"#2C7DFA\" />\n  </svg>\n\n);\n\nconst CloseIcon = () => (\n  <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M11.8333 1.42661L10.6583 0.24585L6 4.92702L1.34167 0.24585L0.166672 1.42661L4.82501 6.10778L0.166672 10.7889L1.34167 11.9697L6 7.28854L10.6583 11.9697L11.8333 10.7889L7.175 6.10778L11.8333 1.42661Z\" fill=\"#ADB5BD\" />\n  </svg>\n);\n\nexport const DropdownMenu: React.FC<RecordType> = ({ record }) => {\n  const [open, setOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n    setOpen(false);\n  };\n\n  const handleMenuClick = () => {\n    setOpen(false);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleOpenChange = (flag: boolean) => {\n    setOpen(flag);\n  };\n\n  return (\n    <Dropdown\n      overlay={(\n        <ul className=\"customDrop\">\n          <Modal\n            open={isModalOpen}\n            onOk={handleOk}\n            footer={[\n              <Button key=\"back\" onClick={handleCancel} className=\"addButton\">\n                Зберегти зміни\n              </Button>,\n            ]}\n          >\n            <div className=\"modalHeader\">\n              <span className=\"plusIcon\">\n                <PlusIcon />\n              </span>\n              <h2 className=\"modalTitle\">Редагувати сутність</h2>\n              <button onClick={handleCancel} type=\"button\" className=\"closeIcon\">\n                <CloseIcon />\n              </button>\n            </div>\n            <EditModal user={record} />\n          </Modal>\n          <li className=\"customDropItem\">\n            <Button type=\"ghost\" onClick={showModal} className=\"modalButton\">\n              <img src={editSvg} alt=\"\" className=\"customDropIcon\" />\n              Редагувати\n            </Button>\n            <hr className=\"divider\" />\n          </li>\n          <li className=\"customDropItem\">\n            <Button type=\"ghost\" className=\"custopDropButton\" onClick={handleMenuClick}>\n              <img src={saveSvg} alt=\"\" className=\"customDropIcon\" />\n              Зберегти як файл\n            </Button>\n            <hr className=\"divider\" />\n          </li>\n          <li className=\"customDropItem\">\n            <Button type=\"ghost\" className=\"custopDropButton\" onClick={handleMenuClick}>\n              <img src={deleteSvg} alt=\"\" className=\"customDropIcon\" />\n              Видалити\n            </Button>\n          </li>\n        </ul>\n      )}\n      onOpenChange={handleOpenChange}\n      open={open}\n    >\n      <Button size=\"small\" type=\"ghost\">\n        <img src={optionSvg} alt=\"\" />\n      </Button>\n    </Dropdown>\n  );\n};\n","import React from 'react';\nimport { Table } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { users } from '../../data';\nimport './Table.scss';\n\nimport { User } from '../../types/User';\nimport { DropdownMenu } from '../Dropdown/Dropdown';\n\nconst columns: ColumnsType<User> = [\n  {\n    title: '',\n    dataIndex: 'action',\n    key: 'action',\n    render: (_text, record) => {\n      return (\n        <DropdownMenu record={record} />\n      );\n    },\n  },\n  {\n    title: 'Назва',\n    dataIndex: 'title',\n    key: 'title',\n  },\n  {\n    title: 'URL',\n    dataIndex: 'url',\n    key: 'url',\n  },\n  {\n    title: 'Автор',\n    dataIndex: 'userName',\n    key: 'userName',\n  },\n  {\n    title: 'Створено',\n    dataIndex: 'data',\n    key: 'data',\n    sorter: (a, b) => a.data.localeCompare(b.data),\n  },\n];\n\nexport const TableComponent: React.FC = () => {\n  return (\n    <Table\n      columns={columns}\n      dataSource={users}\n    />\n  );\n};\n","import React from 'react';\nimport 'antd/dist/reset.css';\nimport './App.scss';\nimport { Row, Col } from 'antd';\nimport { TableComponent } from './components/Table/Table';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Row>\n        <Col xs={24} md={{ span: 18, offset: 3 }}>\n          <TableComponent />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}